[
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/pugixml.hpp",
    "line_number": 689,
    "line_content": "\t\txpath_node_set select_nodes(const char_t* query, xpath_variable_set* variables = PUGIXML_NULL) const;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "\t\txpath_node select_node(const xpath_query& query) const;",
      "",
      "\t\t// Select node set by evaluating XPath query",
      "\t\txpath_node_set select_nodes(const char_t* query, xpath_variable_set* variables = PUGIXML_NULL) const;",
      "\t\txpath_node_set select_nodes(const xpath_query& query) const;",
      "",
      "\t\t// (deprecated: use select_node instead) Select single node by evaluating XPath query."
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/pugixml.hpp",
    "line_number": 690,
    "line_content": "\t\txpath_node_set select_nodes(const xpath_query& query) const;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "",
      "\t\t// Select node set by evaluating XPath query",
      "\t\txpath_node_set select_nodes(const char_t* query, xpath_variable_set* variables = PUGIXML_NULL) const;",
      "\t\txpath_node_set select_nodes(const xpath_query& query) const;",
      "",
      "\t\t// (deprecated: use select_node instead) Select single node by evaluating XPath query.",
      "\t\tPUGIXML_DEPRECATED xpath_node select_single_node(const char_t* query, xpath_variable_set* variables = PUGIXML_NULL) const;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/pugixml.hpp",
    "line_number": 1011,
    "line_content": "\t\tstatus_append_invalid_root,\t// Unable to append nodes since root type is not node_element or node_document (exclusive to xml_node::append_buffer)",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "\t\tstatus_bad_end_element,\t\t// Parsing error occurred while parsing end element tag",
      "\t\tstatus_end_element_mismatch,// There was a mismatch of start-end tags (closing tag had incorrect name, some tag was not closed or there was an excessive closing tag)",
      "",
      "\t\tstatus_append_invalid_root,\t// Unable to append nodes since root type is not node_element or node_document (exclusive to xml_node::append_buffer)",
      "",
      "\t\tstatus_no_document_element\t// Parsing resulted in a document without element nodes",
      "\t};"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/ThreadedSSLSocketInitiator.h",
    "line_number": 146,
    "line_content": "  void setCertAndKey(X509 *cert, RSA *key) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "RSA",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "",
      "  void setPassword(const std::string &pwd) { m_password.assign(pwd); }",
      "",
      "  void setCertAndKey(X509 *cert, RSA *key) {",
      "    m_cert = cert;",
      "    m_key = key;",
      "  }"
    ],
    "description": "RSA algorithm usage - not quantum resistant",
    "recommendation": "Replace with ML-DSA (NIST Dilithium) for signatures"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/pugixml.cpp",
    "line_number": 4447,
    "line_content": "\t\tassert(!dest && (header & header_mask) == 0); // copies are performed into fresh nodes",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "\ttemplate <typename String, typename Header>",
      "\tPUGI_IMPL_FN void node_copy_string(String& dest, Header& header, uintptr_t header_mask, char_t* source, Header& source_header, xml_allocator* alloc)",
      "\t{",
      "\t\tassert(!dest && (header & header_mask) == 0); // copies are performed into fresh nodes",
      "",
      "\t\tif (source)",
      "\t\t{"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/pugixml.cpp",
    "line_number": 13138,
    "line_content": "\tPUGI_IMPL_FN xpath_node_set xml_node::select_nodes(const char_t* query, xpath_variable_set* variables) const",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "\t\treturn query.evaluate_node(*this);",
      "\t}",
      "",
      "\tPUGI_IMPL_FN xpath_node_set xml_node::select_nodes(const char_t* query, xpath_variable_set* variables) const",
      "\t{",
      "\t\txpath_query q(query, variables);",
      "\t\treturn q.evaluate_node_set(*this);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/pugixml.cpp",
    "line_number": 13144,
    "line_content": "\tPUGI_IMPL_FN xpath_node_set xml_node::select_nodes(const xpath_query& query) const",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "\t\treturn q.evaluate_node_set(*this);",
      "\t}",
      "",
      "\tPUGI_IMPL_FN xpath_node_set xml_node::select_nodes(const xpath_query& query) const",
      "\t{",
      "\t\treturn query.evaluate_node_set(*this);",
      "\t}"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/ThreadedSSLSocketInitiator.cpp",
    "line_number": 216,
    "line_content": "    if (SSL_CTX_use_RSAPrivateKey(m_ctx, m_key) <= 0) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "RSA",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "      throw RuntimeError(\"Failed to set certificate\");",
      "    }",
      "",
      "    if (SSL_CTX_use_RSAPrivateKey(m_ctx, m_key) <= 0) {",
      "      ssl_term();",
      "      throw RuntimeError(\"Failed to set key\");",
      "    }"
    ],
    "description": "RSA algorithm usage - not quantum resistant",
    "recommendation": "Replace with ML-DSA (NIST Dilithium) for signatures"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 183,
    "line_content": "const int EncryptMethod_DES = 2;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const char PossResend_YES = 'Y';",
      "const int EncryptMethod_NONE_OTHER = 0;",
      "const int EncryptMethod_PKCS = 1;",
      "const int EncryptMethod_DES = 2;",
      "const int EncryptMethod_PKCSDES = 3;",
      "const int EncryptMethod_PGPDES = 4;",
      "const int EncryptMethod_PGPDESMD5 = 5;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 184,
    "line_content": "const int EncryptMethod_PKCSDES = 3;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int EncryptMethod_NONE_OTHER = 0;",
      "const int EncryptMethod_PKCS = 1;",
      "const int EncryptMethod_DES = 2;",
      "const int EncryptMethod_PKCSDES = 3;",
      "const int EncryptMethod_PGPDES = 4;",
      "const int EncryptMethod_PGPDESMD5 = 5;",
      "const int EncryptMethod_PEMDESMD5 = 6;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 185,
    "line_content": "const int EncryptMethod_PGPDES = 4;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int EncryptMethod_PKCS = 1;",
      "const int EncryptMethod_DES = 2;",
      "const int EncryptMethod_PKCSDES = 3;",
      "const int EncryptMethod_PGPDES = 4;",
      "const int EncryptMethod_PGPDESMD5 = 5;",
      "const int EncryptMethod_PEMDESMD5 = 6;",
      "const int EncryptMethod_NONE = 0;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 186,
    "line_content": "const int EncryptMethod_PGPDESMD5 = 5;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int EncryptMethod_DES = 2;",
      "const int EncryptMethod_PKCSDES = 3;",
      "const int EncryptMethod_PGPDES = 4;",
      "const int EncryptMethod_PGPDESMD5 = 5;",
      "const int EncryptMethod_PEMDESMD5 = 6;",
      "const int EncryptMethod_NONE = 0;",
      "const int EncryptMethod_PEM = 6;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 187,
    "line_content": "const int EncryptMethod_PEMDESMD5 = 6;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int EncryptMethod_PKCSDES = 3;",
      "const int EncryptMethod_PGPDES = 4;",
      "const int EncryptMethod_PGPDESMD5 = 5;",
      "const int EncryptMethod_PEMDESMD5 = 6;",
      "const int EncryptMethod_NONE = 0;",
      "const int EncryptMethod_PEM = 6;",
      "const char GapFillFlag_NO = 'N';"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 414,
    "line_content": "const char Rule80A_SPECIALIST_TRADES = 'S';",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "const char Rule80A_PROPRIETARY_TRANSACTION_AFFILIATED = 'O';",
      "const char Rule80A_PRINCIPAL = 'P';",
      "const char Rule80A_TRANSACTION_NON_MEMBER = 'R';",
      "const char Rule80A_SPECIALIST_TRADES = 'S';",
      "const char Rule80A_TRANSACTION_UNAFFILIATED_MEMBER = 'T';",
      "const char Rule80A_SHORT_EXEMPT_TRANSACTION_MEMBER_NOT_AFFLIATED = 'X';",
      "const char Rule80A_SHORT_EXEMPT_TRANSACTION_NON_MEMBER = 'Z';"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 2166,
    "line_content": "const char NoSides_BOTH_SIDES = '2';",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "const int CrossPrioritization_NONE = 0;",
      "const int CrossPrioritization_BUY_SIDE_IS_PRIORITIZED = 1;",
      "const char NoSides_ONE_SIDE = '1';",
      "const char NoSides_BOTH_SIDES = '2';",
      "const int SecurityListRequestType_SECURITY_TYPE_AND = 1;",
      "const int SecurityListRequestType_PRODUCT = 2;",
      "const int SecurityListRequestType_TRADING_SESSION_ID = 3;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 2188,
    "line_content": "const int TradeRequestType_ALL_TRADES = 0;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int TradeRequestType_UNREPORTED_TRADES_THAT_MATCH_CRITERIA = 3;",
      "const int TradeRequestType_UNMATCHED_TRADES_THAT_MATCH_CRITERIA = 2;",
      "const int TradeRequestType_MATCHED_TRADES_MATCHING_CRITERIA = 1;",
      "const int TradeRequestType_ALL_TRADES = 0;",
      "const char PreviouslyReported_NO = 'N';",
      "const char PreviouslyReported_YES = 'Y';",
      "const char MatchStatus_COMPARED = '0';"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 2547,
    "line_content": "const int PosReqType_TRADES = 1;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int PosMaintResult_REJECTED = 1;",
      "const int PosMaintResult_OTHER = 99;",
      "const int PosReqType_POSITIONS = 0;",
      "const int PosReqType_TRADES = 1;",
      "const int PosReqType_EXERCISES = 2;",
      "const int PosReqType_ASSIGNMENTS = 3;",
      "const int PosReqType_SETTLEMENT_ACTIVITY = 4;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 2589,
    "line_content": "const int TradeReportRejectReason_UNAUTHORIZED_TO_REPORT_TRADES = 3;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int TradeReportRejectReason_SUCCESSFUL = 0;",
      "const int TradeReportRejectReason_INVALID_PARTY_ONFORMATION = 1;",
      "const int TradeReportRejectReason_UNKNOWN_INSTRUMENT = 2;",
      "const int TradeReportRejectReason_UNAUTHORIZED_TO_REPORT_TRADES = 3;",
      "const int TradeReportRejectReason_INVALID_TRADE_TYPE = 4;",
      "const int TradeReportRejectReason_OTHER = 99;",
      "const int TradeReportRejectReason_INVALID_PARTY_INFORMATION = 1;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 2837,
    "line_content": "const int TrdType_PRIVATELY_NEGOTIATED_TRADES = 22;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int TrdType_EXCHANGE_OF_FUTURES_FOR_FUTURES = 18;",
      "const int TrdType_OPTION_INTERIM_TRADE = 19;",
      "const int TrdType_OPTION_CABINET_TRADE = 20;",
      "const int TrdType_PRIVATELY_NEGOTIATED_TRADES = 22;",
      "const int TrdType_SUBSTITUTION_OF_FUTURES_FOR_FORWARDS = 23;",
      "const int TrdType_ERROR_TRADE = 24;",
      "const int TrdType_SPECIAL_CUM_DIVIDEND = 25;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 2855,
    "line_content": "const int TrdType_BLOCK_TRADES = 40;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int TrdType_SPECIAL_EX_BONUS = 37;",
      "const int TrdType_LARGE_TRADE = 38;",
      "const int TrdType_WORKED_PRINCIPAL_TRADE = 39;",
      "const int TrdType_BLOCK_TRADES = 40;",
      "const int TrdType_NAME_CHANGE = 41;",
      "const int TrdType_PORTFOLIO_TRANSFER = 42;",
      "const int TrdType_PROROGATION_BUY = 43;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 3081,
    "line_content": "const int InstrAttribType_AVERAGE_DAILY_NUMBER_TRADES = 41;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int InstrAttribType_US_STD_CONTRACT_IND = 38;",
      "const int InstrAttribType_ADMITTED_TO_TRADING_ON_TRADING_VENUE = 39;",
      "const int InstrAttribType_AVERAGE_DAILY_NOTIONAL_AMOUNT = 40;",
      "const int InstrAttribType_AVERAGE_DAILY_NUMBER_TRADES = 41;",
      "const int CPProgram_PROGRAM3A3 = 1;",
      "const int CPProgram_PROGRAM42 = 2;",
      "const int CPProgram_OTHER = 99;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 3114,
    "line_content": "const int CollInquiryQualifier_OUTSTANDING_TRADES = 7;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int CollInquiryQualifier_NOT_ASSIGNED = 4;",
      "const int CollInquiryQualifier_PARTIALLY_ASSIGNED = 5;",
      "const int CollInquiryQualifier_FULLY_ASSIGNED = 6;",
      "const int CollInquiryQualifier_OUTSTANDING_TRADES = 7;",
      "const int CollAsgnTransType_NEW = 0;",
      "const int CollAsgnTransType_REPLACE = 1;",
      "const int CollAsgnTransType_CANCEL = 2;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 5289,
    "line_content": "const int MDStatisticScope_TRADES = 8;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int MDStatisticScope_ORDERS = 5;",
      "const int MDStatisticScope_QUOTES = 6;",
      "const int MDStatisticScope_ORDERS_AND_QUOTES = 7;",
      "const int MDStatisticScope_TRADES = 8;",
      "const int MDStatisticScope_TRADE_PRICES = 9;",
      "const int MDStatisticScope_AUCTION_PRICES = 10;",
      "const int MDStatisticScope_OPENING_PRICES = 11;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 5368,
    "line_content": "const int MDStatisticRatioType_ORDERS_TO_TRADES = 5;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int MDStatisticRatioType_UPTICKS_TO_DOWNTICKS = 2;",
      "const int MDStatisticRatioType_MARKET_MAKER_TO_NON_MARKET_MAKER = 3;",
      "const int MDStatisticRatioType_AUTOMATED_TO_NON_AUTOMATED = 4;",
      "const int MDStatisticRatioType_ORDERS_TO_TRADES = 5;",
      "const int MDStatisticRatioType_QUOTES_TO_TRADES = 6;",
      "const int MDStatisticRatioType_ORDERS_AND_QUOTES_TO_TRADES = 7;",
      "const int MDStatisticRatioType_FAILED_TO_TOTAL_TRADED_VALUE = 8;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 5369,
    "line_content": "const int MDStatisticRatioType_QUOTES_TO_TRADES = 6;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int MDStatisticRatioType_MARKET_MAKER_TO_NON_MARKET_MAKER = 3;",
      "const int MDStatisticRatioType_AUTOMATED_TO_NON_AUTOMATED = 4;",
      "const int MDStatisticRatioType_ORDERS_TO_TRADES = 5;",
      "const int MDStatisticRatioType_QUOTES_TO_TRADES = 6;",
      "const int MDStatisticRatioType_ORDERS_AND_QUOTES_TO_TRADES = 7;",
      "const int MDStatisticRatioType_FAILED_TO_TOTAL_TRADED_VALUE = 8;",
      "const int MDStatisticRatioType_BENEFITS_TO_TOTAL_TRADED_VALUE = 9;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 5370,
    "line_content": "const int MDStatisticRatioType_ORDERS_AND_QUOTES_TO_TRADES = 7;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int MDStatisticRatioType_AUTOMATED_TO_NON_AUTOMATED = 4;",
      "const int MDStatisticRatioType_ORDERS_TO_TRADES = 5;",
      "const int MDStatisticRatioType_QUOTES_TO_TRADES = 6;",
      "const int MDStatisticRatioType_ORDERS_AND_QUOTES_TO_TRADES = 7;",
      "const int MDStatisticRatioType_FAILED_TO_TOTAL_TRADED_VALUE = 8;",
      "const int MDStatisticRatioType_BENEFITS_TO_TOTAL_TRADED_VALUE = 9;",
      "const int MDStatisticRatioType_FEES_TO_TOTAL_TRADED_VALUE = 10;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 5429,
    "line_content": "const int MDReportEvent_START_OFF_MARKET_TRADES = 3;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int RelativeValueSide_OFFER = 3;",
      "const int MDReportEvent_START_INSTRUMENT_REF_DATA = 1;",
      "const int MDReportEvent_END_INSTRUMENT_REF_DATA = 2;",
      "const int MDReportEvent_START_OFF_MARKET_TRADES = 3;",
      "const int MDReportEvent_END_OFF_MARKET_TRADES = 4;",
      "const int MDReportEvent_START_ORDER_BOOK_TRADES = 5;",
      "const int MDReportEvent_END_ORDER_BOOK_TRADES = 6;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 5430,
    "line_content": "const int MDReportEvent_END_OFF_MARKET_TRADES = 4;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int MDReportEvent_START_INSTRUMENT_REF_DATA = 1;",
      "const int MDReportEvent_END_INSTRUMENT_REF_DATA = 2;",
      "const int MDReportEvent_START_OFF_MARKET_TRADES = 3;",
      "const int MDReportEvent_END_OFF_MARKET_TRADES = 4;",
      "const int MDReportEvent_START_ORDER_BOOK_TRADES = 5;",
      "const int MDReportEvent_END_ORDER_BOOK_TRADES = 6;",
      "const int MDReportEvent_START_OPEN_INTEREST = 7;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 5431,
    "line_content": "const int MDReportEvent_START_ORDER_BOOK_TRADES = 5;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int MDReportEvent_END_INSTRUMENT_REF_DATA = 2;",
      "const int MDReportEvent_START_OFF_MARKET_TRADES = 3;",
      "const int MDReportEvent_END_OFF_MARKET_TRADES = 4;",
      "const int MDReportEvent_START_ORDER_BOOK_TRADES = 5;",
      "const int MDReportEvent_END_ORDER_BOOK_TRADES = 6;",
      "const int MDReportEvent_START_OPEN_INTEREST = 7;",
      "const int MDReportEvent_END_OPEN_INTEREST = 8;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixValues.h",
    "line_number": 5432,
    "line_content": "const int MDReportEvent_END_ORDER_BOOK_TRADES = 6;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int MDReportEvent_START_OFF_MARKET_TRADES = 3;",
      "const int MDReportEvent_END_OFF_MARKET_TRADES = 4;",
      "const int MDReportEvent_START_ORDER_BOOK_TRADES = 5;",
      "const int MDReportEvent_END_ORDER_BOOK_TRADES = 6;",
      "const int MDReportEvent_START_OPEN_INTEREST = 7;",
      "const int MDReportEvent_END_OPEN_INTEREST = 8;",
      "const int MDReportEvent_START_SETTLEMENT_PRICES = 9;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 155,
    "line_content": "static DH *load_dh_param(const char *dhfile) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "MEDIUM",
    "context_lines": [
      "namespace FIX {",
      "",
      "#ifndef OPENSSL_NO_DH",
      "static DH *load_dh_param(const char *dhfile) {",
      "  DH *ret = NULL;",
      "  BIO *bio;",
      ""
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 156,
    "line_content": "  DH *ret = NULL;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "",
      "#ifndef OPENSSL_NO_DH",
      "static DH *load_dh_param(const char *dhfile) {",
      "  DH *ret = NULL;",
      "  BIO *bio;",
      "",
      "  if ((bio = BIO_new_file(dhfile, \"r\")) == NULL) {"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 173,
    "line_content": "static int DH_set0_pqg(DH *dh, BIGNUM *p, BIGNUM *q, BIGNUM *g) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "MEDIUM",
    "context_lines": [
      "#if (OPENSSL_VERSION_NUMBER < 0x10100000L)",
      "/* OpenSSL Pre-1.1.0 compatibility */",
      "/* Taken from OpenSSL 1.1.0 snapshot 20160410 */",
      "static int DH_set0_pqg(DH *dh, BIGNUM *p, BIGNUM *q, BIGNUM *g) {",
      "  /* q is optional */",
      "  if (p == NULL || g == NULL) {",
      "    return 0;"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 197,
    "line_content": "static DH *make_dh_params(BIGNUM *(*prime)(BIGNUM *)) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "MEDIUM",
    "context_lines": [
      " * Grab well-defined DH parameters from OpenSSL, see the BN_get_rfc*",
      " * functions in <openssl/bn.h> for all available primes.",
      " */",
      "static DH *make_dh_params(BIGNUM *(*prime)(BIGNUM *)) {",
      "  DH *dh = DH_new();",
      "  BIGNUM *p, *g;",
      ""
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 198,
    "line_content": "  DH *dh = DH_new();",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      " * functions in <openssl/bn.h> for all available primes.",
      " */",
      "static DH *make_dh_params(BIGNUM *(*prime)(BIGNUM *)) {",
      "  DH *dh = DH_new();",
      "  BIGNUM *p, *g;",
      "",
      "  if (!dh) {"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 198,
    "line_content": "  DH *dh = DH_new();",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      " * functions in <openssl/bn.h> for all available primes.",
      " */",
      "static DH *make_dh_params(BIGNUM *(*prime)(BIGNUM *)) {",
      "  DH *dh = DH_new();",
      "  BIGNUM *p, *g;",
      "",
      "  if (!dh) {"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 210,
    "line_content": "    DH_free(dh);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "MEDIUM",
    "context_lines": [
      "    BN_set_word(g, 2);",
      "  }",
      "  if (!p || !g || !DH_set0_pqg(dh, p, NULL, g)) {",
      "    DH_free(dh);",
      "    BN_free(p);",
      "    BN_free(g);",
      "    return NULL;"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 246,
    "line_content": "    DH_free(dhparams[n].dh);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "MEDIUM",
    "context_lines": [
      "   * in the (unexpected) case where these variables are already",
      "   * NULL. */",
      "  for (n = 0; n < sizeof(dhparams) / sizeof(dhparams[0]); n++) {",
      "    DH_free(dhparams[n].dh);",
      "    dhparams[n].dh = NULL;",
      "  }",
      "}"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 258,
    "line_content": "DH *modssl_get_dh_params(unsigned keylen) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      " * contrast to the keys itself) and code safe as the returned structure",
      " * is duplicated by OpenSSL anyway. Hence no modification happens",
      " * to our copy. */",
      "DH *modssl_get_dh_params(unsigned keylen) {",
      "  unsigned n;",
      "",
      "  for (n = 0; n < sizeof(dhparams) / sizeof(dhparams[0]); n++) {"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 273,
    "line_content": "DH *ssl_callback_TmpDH(SSL *ssl, int exportvar, int keylen) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "MEDIUM",
    "context_lines": [
      "/*",
      " * Hand out standard DH parameters, based on the authentication strength",
      " */",
      "DH *ssl_callback_TmpDH(SSL *ssl, int exportvar, int keylen) {",
      "  EVP_PKEY *pkey;",
      "  int type;",
      ""
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 273,
    "line_content": "DH *ssl_callback_TmpDH(SSL *ssl, int exportvar, int keylen) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "MEDIUM",
    "context_lines": [
      "/*",
      " * Hand out standard DH parameters, based on the authentication strength",
      " */",
      "DH *ssl_callback_TmpDH(SSL *ssl, int exportvar, int keylen) {",
      "  EVP_PKEY *pkey;",
      "  int type;",
      ""
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 296,
    "line_content": "  if ((type == EVP_PKEY_RSA) || (type == EVP_PKEY_DSA)) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "RSA",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "   * 1024-bit DH parameters (with the effect that OpenSSL skips this",
      "   * callback).",
      "   */",
      "  if ((type == EVP_PKEY_RSA) || (type == EVP_PKEY_DSA)) {",
      "    keylen = EVP_PKEY_bits(pkey);",
      "  }",
      ""
    ],
    "description": "RSA algorithm usage - not quantum resistant",
    "recommendation": "Replace with ML-DSA (NIST Dilithium) for signatures"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 296,
    "line_content": "  if ((type == EVP_PKEY_RSA) || (type == EVP_PKEY_DSA)) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DSA",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "   * 1024-bit DH parameters (with the effect that OpenSSL skips this",
      "   * callback).",
      "   */",
      "  if ((type == EVP_PKEY_RSA) || (type == EVP_PKEY_DSA)) {",
      "    keylen = EVP_PKEY_bits(pkey);",
      "  }",
      ""
    ],
    "description": "DSA algorithm usage - not quantum resistant",
    "recommendation": "Replace with ML-DSA (NIST Dilithium) for signatures"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 944,
    "line_content": "        thisopt = SSL_PROTOCOL_SSLV2;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Legacy_TLS",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "      }",
      "",
      "      if (!strncasecmp(w, \"SSLv2\", 5 /* strlen(\"SSLv2\") */)) {",
      "        thisopt = SSL_PROTOCOL_SSLV2;",
      "        w += 5 /* strlen(\"SSLv2\")*/;",
      "      } else if (!strncasecmp(w, \"SSLv3\", 5 /* strlen(\"SSLv3\") */)) {",
      "        thisopt = SSL_PROTOCOL_SSLV3;"
    ],
    "description": "Legacy SSL/TLS protocol versions",
    "recommendation": "Upgrade to TLS 1.3 with post-quantum cipher suites"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 947,
    "line_content": "        thisopt = SSL_PROTOCOL_SSLV3;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Legacy_TLS",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "        thisopt = SSL_PROTOCOL_SSLV2;",
      "        w += 5 /* strlen(\"SSLv2\")*/;",
      "      } else if (!strncasecmp(w, \"SSLv3\", 5 /* strlen(\"SSLv3\") */)) {",
      "        thisopt = SSL_PROTOCOL_SSLV3;",
      "        w += 5 /*strlen(\"SSLv3\") */;",
      "      } else if (!strncasecmp(w, \"TLSv1_1\", 7 /* strlen(\"TLSv1_1\") */)) {",
      "        thisopt = SSL_PROTOCOL_TLSV1_1;"
    ],
    "description": "Legacy SSL/TLS protocol versions",
    "recommendation": "Upgrade to TLS 1.3 with post-quantum cipher suites"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 982,
    "line_content": "    thisopt = SSL_PROTOCOL_SSLV2;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Legacy_TLS",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    }",
      "  } else { /* default all except SSLv2 */",
      "    options = SSL_PROTOCOL_ALL;",
      "    thisopt = SSL_PROTOCOL_SSLV2;",
      "    options &= ~thisopt;",
      "  }",
      ""
    ],
    "description": "Legacy SSL/TLS protocol versions",
    "recommendation": "Upgrade to TLS 1.3 with post-quantum cipher suites"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 991,
    "line_content": "  if (!(options & SSL_PROTOCOL_SSLV2)) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Legacy_TLS",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "",
      "void setCtxOptions(SSL_CTX *ctx, long options) {",
      "  SSL_CTX_set_options(ctx, SSL_OP_ALL);",
      "  if (!(options & SSL_PROTOCOL_SSLV2)) {",
      "    SSL_CTX_set_options(ctx, SSL_OP_NO_SSLv2);",
      "  }",
      "  if (!(options & SSL_PROTOCOL_SSLV3)) {"
    ],
    "description": "Legacy SSL/TLS protocol versions",
    "recommendation": "Upgrade to TLS 1.3 with post-quantum cipher suites"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 994,
    "line_content": "  if (!(options & SSL_PROTOCOL_SSLV3)) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Legacy_TLS",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "  if (!(options & SSL_PROTOCOL_SSLV2)) {",
      "    SSL_CTX_set_options(ctx, SSL_OP_NO_SSLv2);",
      "  }",
      "  if (!(options & SSL_PROTOCOL_SSLV3)) {",
      "    SSL_CTX_set_options(ctx, SSL_OP_NO_SSLv3);",
      "  }",
      "  if (!(options & SSL_PROTOCOL_TLSV1)) {"
    ],
    "description": "Legacy SSL/TLS protocol versions",
    "recommendation": "Upgrade to TLS 1.3 with post-quantum cipher suites"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 1017,
    "line_content": "    DH *dh = NULL;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "#ifndef OPENSSL_NO_DH",
      "  int no_dhe = 0;",
      "  if (!no_dhe) {",
      "    DH *dh = NULL;",
      "",
      "    if (certFile) {",
      "      dh = load_dh_param(certFile);"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 1024,
    "line_content": "      SSL_CTX_set_tmp_dh(ctx, dh);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "    }",
      "",
      "    if (dh != NULL) {",
      "      SSL_CTX_set_tmp_dh(ctx, dh);",
      "",
      "      DH_free(dh);",
      "    } else {"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 1026,
    "line_content": "      DH_free(dh);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "    if (dh != NULL) {",
      "      SSL_CTX_set_tmp_dh(ctx, dh);",
      "",
      "      DH_free(dh);",
      "    } else {",
      "      SSL_CTX_set_tmp_dh_callback(ctx, ssl_callback_TmpDH);",
      "    }"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 1028,
    "line_content": "      SSL_CTX_set_tmp_dh_callback(ctx, ssl_callback_TmpDH);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "DH",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "",
      "      DH_free(dh);",
      "    } else {",
      "      SSL_CTX_set_tmp_dh_callback(ctx, ssl_callback_TmpDH);",
      "    }",
      "    //(void)BIO_flush(bio_s_out);",
      "  }"
    ],
    "description": "Diffie-Hellman key exchange - not quantum resistant",
    "recommendation": "Replace with ML-KEM (NIST Kyber) for key exchange"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 1036,
    "line_content": "  ecdh = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "ECDSA_EC",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "",
      "#ifndef OPENSSL_NO_ECDH",
      "  EC_KEY *ecdh;",
      "  ecdh = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);",
      "  if (ecdh == NULL) {",
      "    return 2;",
      "  }"
    ],
    "description": "ECDSA/EC algorithm usage - not quantum resistant",
    "recommendation": "Replace ECDSA with ML-DSA, ECDH with ML-KEM (Kyber)"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 1036,
    "line_content": "  ecdh = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "ECDSA_EC",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "",
      "#ifndef OPENSSL_NO_ECDH",
      "  EC_KEY *ecdh;",
      "  ecdh = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);",
      "  if (ecdh == NULL) {",
      "    return 2;",
      "  }"
    ],
    "description": "ECDSA/EC algorithm usage - not quantum resistant",
    "recommendation": "Replace ECDSA with ML-DSA, ECDH with ML-KEM (Kyber)"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 1040,
    "line_content": "  SSL_CTX_set_tmp_ecdh(ctx, ecdh);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "ECDSA_EC",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "  if (ecdh == NULL) {",
      "    return 2;",
      "  }",
      "  SSL_CTX_set_tmp_ecdh(ctx, ecdh);",
      "  EC_KEY_free(ecdh);",
      "#endif",
      ""
    ],
    "description": "ECDSA/EC algorithm usage - not quantum resistant",
    "recommendation": "Replace ECDSA with ML-DSA, ECDH with ML-KEM (Kyber)"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/UtilitySSL.cpp",
    "line_number": 1041,
    "line_content": "  EC_KEY_free(ecdh);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "ECDSA_EC",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "    return 2;",
      "  }",
      "  SSL_CTX_set_tmp_ecdh(ctx, ecdh);",
      "  EC_KEY_free(ecdh);",
      "#endif",
      "",
      "  return 0;"
    ],
    "description": "ECDSA/EC algorithm usage - not quantum resistant",
    "recommendation": "Replace ECDSA with ML-DSA, ECDH with ML-KEM (Kyber)"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/SSLSocketInitiator.h",
    "line_number": 151,
    "line_content": "  void setCertAndKey(X509 *cert, RSA *key) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "RSA",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "",
      "  void setPassword(const std::string &pwd) { m_password.assign(pwd); }",
      "",
      "  void setCertAndKey(X509 *cert, RSA *key) {",
      "    m_cert = cert;",
      "    m_key = key;",
      "  }"
    ],
    "description": "RSA algorithm usage - not quantum resistant",
    "recommendation": "Replace with ML-DSA (NIST Dilithium) for signatures"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFields.h",
    "line_number": 597,
    "line_content": "DEFINE_NUMINGROUP(NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "DEFINE_INT(CrossType);",
      "DEFINE_INT(CrossPrioritization);",
      "DEFINE_STRING(OrigCrossID);",
      "DEFINE_NUMINGROUP(NoSides);",
      "DEFINE_NUMINGROUP(NoLegs);",
      "DEFINE_CURRENCY(LegCurrency);",
      "DEFINE_INT(TotalNumSecurityTypes);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFields.h",
    "line_number": 949,
    "line_content": "DEFINE_NUMINGROUP(NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "DEFINE_STRING(CollReqID);",
      "DEFINE_INT(CollAsgnReason);",
      "DEFINE_INT(CollInquiryQualifier);",
      "DEFINE_NUMINGROUP(NoTrades);",
      "DEFINE_PERCENTAGE(MarginRatio);",
      "DEFINE_AMT(MarginExcess);",
      "DEFINE_AMT(TotalNetValue);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFields.h",
    "line_number": 1885,
    "line_content": "DEFINE_NUMINGROUP(NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "DEFINE_PRICE(SideAvgPx);",
      "DEFINE_INT(SideAvgPxIndicator);",
      "DEFINE_STRING(SideAvgPxGroupID);",
      "DEFINE_NUMINGROUP(NoRelatedTrades);",
      "DEFINE_STRING(RelatedTradeID);",
      "DEFINE_INT(RelatedTradeIDSource);",
      "DEFINE_LOCALMKTDATE(RelatedTradeDate);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFields.h",
    "line_number": 1917,
    "line_content": "DEFINE_NUMINGROUP(NoInstrmtMatchSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "DEFINE_STRING(SettlPriceUnitOfMeasure);",
      "DEFINE_CURRENCY(SettlPriceUnitOfMeasureCurrency);",
      "DEFINE_UTCTIMESTAMP(TradeMatchTimestamp);",
      "DEFINE_NUMINGROUP(NoInstrmtMatchSides);",
      "DEFINE_NUMINGROUP(NoTrdMatchSides);",
      "DEFINE_STRING(TrdMatchSubID);",
      "DEFINE_NUMINGROUP(NoLegExecs);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFields.h",
    "line_number": 1918,
    "line_content": "DEFINE_NUMINGROUP(NoTrdMatchSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "DEFINE_CURRENCY(SettlPriceUnitOfMeasureCurrency);",
      "DEFINE_UTCTIMESTAMP(TradeMatchTimestamp);",
      "DEFINE_NUMINGROUP(NoInstrmtMatchSides);",
      "DEFINE_NUMINGROUP(NoTrdMatchSides);",
      "DEFINE_STRING(TrdMatchSubID);",
      "DEFINE_NUMINGROUP(NoLegExecs);",
      "DEFINE_STRING(LegExecID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFieldNumbers.h",
    "line_number": 596,
    "line_content": "const int NoSides = 552;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int CrossType = 549;",
      "const int CrossPrioritization = 550;",
      "const int OrigCrossID = 551;",
      "const int NoSides = 552;",
      "const int NoLegs = 555;",
      "const int LegCurrency = 556;",
      "const int TotalNumSecurityTypes = 557;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFieldNumbers.h",
    "line_number": 948,
    "line_content": "const int NoTrades = 897;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int CollReqID = 894;",
      "const int CollAsgnReason = 895;",
      "const int CollInquiryQualifier = 896;",
      "const int NoTrades = 897;",
      "const int MarginRatio = 898;",
      "const int MarginExcess = 899;",
      "const int TotalNetValue = 900;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFieldNumbers.h",
    "line_number": 1884,
    "line_content": "const int NoRelatedTrades = 1855;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int SideAvgPx = 1852;",
      "const int SideAvgPxIndicator = 1853;",
      "const int SideAvgPxGroupID = 1854;",
      "const int NoRelatedTrades = 1855;",
      "const int RelatedTradeID = 1856;",
      "const int RelatedTradeIDSource = 1857;",
      "const int RelatedTradeDate = 1858;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFieldNumbers.h",
    "line_number": 1916,
    "line_content": "const int NoInstrmtMatchSides = 1889;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int SettlPriceUnitOfMeasure = 1886;",
      "const int SettlPriceUnitOfMeasureCurrency = 1887;",
      "const int TradeMatchTimestamp = 1888;",
      "const int NoInstrmtMatchSides = 1889;",
      "const int NoTrdMatchSides = 1890;",
      "const int TrdMatchSubID = 1891;",
      "const int NoLegExecs = 1892;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/FixFieldNumbers.h",
    "line_number": 1917,
    "line_content": "const int NoTrdMatchSides = 1890;",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "const int SettlPriceUnitOfMeasureCurrency = 1887;",
      "const int TradeMatchTimestamp = 1888;",
      "const int NoInstrmtMatchSides = 1889;",
      "const int NoTrdMatchSides = 1890;",
      "const int TrdMatchSubID = 1891;",
      "const int NoLegExecs = 1892;",
      "const int LegExecID = 1893;"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/SSLSocketInitiator.cpp",
    "line_number": 224,
    "line_content": "    if (SSL_CTX_use_RSAPrivateKey(m_ctx, m_key) <= 0) {",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "RSA",
    "severity": "HIGH",
    "confidence": "HIGH",
    "context_lines": [
      "      throw RuntimeError(\"Failed to set certificate\");",
      "    }",
      "",
      "    if (SSL_CTX_use_RSAPrivateKey(m_ctx, m_key) <= 0) {",
      "      ssl_term();",
      "      throw RuntimeError(\"Failed to set key\");",
      "    }"
    ],
    "description": "RSA algorithm usage - not quantum resistant",
    "recommendation": "Replace with ML-DSA (NIST Dilithium) for signatures"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralReport.h",
    "line_number": 68,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralReport.h",
    "line_number": 72,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CrossOrderCancelRequest.h",
    "line_number": 59,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CrossOrderCancelRequest.h",
    "line_number": 63,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,75,38,152,516,468,469,376,58,354,355,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,75,38,152,516,468,469,376,58,354,355,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);",
      "      FIELD_SET(*this, FIX::ClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralRequest.h",
    "line_number": 66,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralRequest.h",
    "line_number": 70,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralInquiryAck.h",
    "line_number": 71,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralInquiryAck.h",
    "line_number": 75,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralAssignment.h",
    "line_number": 71,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralAssignment.h",
    "line_number": 75,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CrossOrderCancelReplaceRequest.h",
    "line_number": 61,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CrossOrderCancelReplaceRequest.h",
    "line_number": 65,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,1091,582,121,120,775,58,354,355,77,203,544,635,377,659,962,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,1091,582,121,120,775,58,354,355,77,203,544,635,377,659,962,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::ClOrdID);",
      "      FIELD_SET(*this, FIX::SecondaryClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/TradeCaptureReportAck.h",
    "line_number": 407,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::MessageEventSource);",
      "    FIELD_SET(*this, FIX::LastUpdateTime);",
      "    FIELD_SET(*this, FIX::RndPx);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/TradeCaptureReportAck.h",
    "line_number": 411,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,526,66,453,1,660,581,81,575,1093,576,578,579,821,15,376,377,528,529,582,40,18,483,336,625,943,12,13,479,497,157,230,158,159,738,920,921,922,238,237,118,119,120,155,156,77,752,518,232,136,825,826,591,70,78,1072,1057,1009,1005,1006,1007,83,1008,1016,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,526,66,453,1,660,581,81,575,1093,576,578,579,821,15,376,377,528,529,582,40,18,483,336,625,943,12,13,479,497,157,230,158,159,738,920,921,922,238,237,118,119,120,155,156,77,752,518,232,136,825,826,591,70,78,1072,1057,1009,1005,1006,1007,83,1008,1016,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrderID);",
      "      FIELD_SET(*this, FIX::SecondaryOrderID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/NewOrderCross.h",
    "line_number": 56,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/NewOrderCross.h",
    "line_number": 60,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,1091,582,121,120,775,58,354,355,77,203,544,635,377,659,962,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,1091,582,121,120,775,58,354,355,77,203,544,635,377,659,962,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::ClOrdID);",
      "      FIELD_SET(*this, FIX::SecondaryClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralResponse.h",
    "line_number": 73,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralResponse.h",
    "line_number": 77,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/TradeCaptureReport.h",
    "line_number": 439,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::MatchStatus);",
      "    FIELD_SET(*this, FIX::MatchType);",
      "    FIELD_SET(*this, FIX::OrderCategory);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/TradeCaptureReport.h",
    "line_number": 443,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,19,526,66,1009,1005,1006,1007,83,1008,453,1,660,581,81,1093,575,576,578,579,821,15,376,377,528,529,582,40,18,483,336,625,943,12,13,479,497,157,230,158,159,738,920,921,922,238,237,118,119,120,155,156,77,58,354,355,752,518,232,136,825,826,591,70,78,1016,1072,1057,1139,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,19,526,66,1009,1005,1006,1007,83,1008,453,1,660,581,81,1093,575,576,578,579,821,15,376,377,528,529,582,40,18,483,336,625,943,12,13,479,497,157,230,158,159,738,920,921,922,238,237,118,119,120,155,156,77,58,354,355,752,518,232,136,825,826,591,70,78,1016,1072,1057,1139,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrderID);",
      "      FIELD_SET(*this, FIX::SecondaryOrderID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralInquiry.h",
    "line_number": 62,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50/CollateralInquiry.h",
    "line_number": 66,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralReport.h",
    "line_number": 69,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralReport.h",
    "line_number": 73,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/MarketDataSnapshotFullRefresh.h",
    "line_number": 5694,
    "line_content": "      FIELD_SET(*this, FIX::NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "      };",
      "      FIELD_SET(*this, FIX::IntraFirmTradeIndicator);",
      "      FIELD_SET(*this, FIX::PreviouslyReported);",
      "      FIELD_SET(*this, FIX::NoRelatedTrades);",
      "      class NoRelatedTrades: public FIX::Group",
      "      {",
      "      public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/MarketDataSnapshotFullRefresh.h",
    "line_number": 5698,
    "line_content": "      NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "      class NoRelatedTrades: public FIX::Group",
      "      {",
      "      public:",
      "      NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
      "        FIELD_SET(*this, FIX::RelatedTradeID);",
      "        FIELD_SET(*this, FIX::RelatedTradeIDSource);",
      "        FIELD_SET(*this, FIX::RelatedRegulatoryTradeIDSource);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeMatchReport.h",
    "line_number": 47,
    "line_content": "    FIELD_SET(*this, FIX::NoInstrmtMatchSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::TradeMatchTimestamp);",
      "    FIELD_SET(*this, FIX::TransactTime);",
      "    FIELD_SET(*this, FIX::MultiLegReportingType);",
      "    FIELD_SET(*this, FIX::NoInstrmtMatchSides);",
      "    class NoInstrmtMatchSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeMatchReport.h",
    "line_number": 51,
    "line_content": "    NoInstrmtMatchSides() : FIX::Group(1889,55,FIX::message_order(55,65,48,22,460,1227,1151,461,2891,167,762,200,541,1079,966,1049,965,224,1449,1450,1451,1452,1457,1458,1739,2210,1938,1939,1940,2735,1941,1575,1942,1943,1944,1945,1946,1947,1948,1949,1950,2879,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1577,1580,1581,1678,1697,225,239,226,227,228,255,543,470,471,472,240,202,2578,2577,947,2904,967,968,1698,1866,2600,2001,2601,1478,1479,1480,1481,206,231,1435,2353,1439,969,1146,996,1147,1716,2905,1191,1192,1717,2906,1193,2579,1194,1482,1195,2753,1196,1197,2002,2140,1524,2907,1198,1199,1200,201,2681,2685,1244,1242,2575,2574,997,223,207,970,971,106,348,349,2737,2714,2715,2716,107,350,351,691,667,875,876,873,874,1687,1787,2141,2142,2143,2752,2144,2145,2576,2962,2602,2603,555,711,1891,53,15,2897,120,2899,854,32,423,31,30,1890,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoInstrmtMatchSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoInstrmtMatchSides() : FIX::Group(1889,55,FIX::message_order(55,65,48,22,460,1227,1151,461,2891,167,762,200,541,1079,966,1049,965,224,1449,1450,1451,1452,1457,1458,1739,2210,1938,1939,1940,2735,1941,1575,1942,1943,1944,1945,1946,1947,1948,1949,1950,2879,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1577,1580,1581,1678,1697,225,239,226,227,228,255,543,470,471,472,240,202,2578,2577,947,2904,967,968,1698,1866,2600,2001,2601,1478,1479,1480,1481,206,231,1435,2353,1439,969,1146,996,1147,1716,2905,1191,1192,1717,2906,1193,2579,1194,1482,1195,2753,1196,1197,2002,2140,1524,2907,1198,1199,1200,201,2681,2685,1244,1242,2575,2574,997,223,207,970,971,106,348,349,2737,2714,2715,2716,107,350,351,691,667,875,876,873,874,1687,1787,2141,2142,2143,2752,2144,2145,2576,2962,2602,2603,555,711,1891,53,15,2897,120,2899,854,32,423,31,30,1890,0)) {}",
      "      FIELD_SET(*this, FIX::Symbol);",
      "      FIELD_SET(*this, FIX::SymbolSfx);",
      "      FIELD_SET(*this, FIX::SecurityID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeMatchReport.h",
    "line_number": 5486,
    "line_content": "      FIELD_SET(*this, FIX::NoTrdMatchSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "      FIELD_SET(*this, FIX::PriceType);",
      "      FIELD_SET(*this, FIX::LastPx);",
      "      FIELD_SET(*this, FIX::LastMkt);",
      "      FIELD_SET(*this, FIX::NoTrdMatchSides);",
      "      class NoTrdMatchSides: public FIX::Group",
      "      {",
      "      public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeMatchReport.h",
    "line_number": 5490,
    "line_content": "      NoTrdMatchSides() : FIX::Group(1890,54,FIX::message_order(54,1427,1900,1506,1005,1428,1429,1009,1597,1599,1598,1006,1007,1008,430,1154,2901,1155,2902,453,578,579,376,2404,2351,2352,377,582,943,77,825,826,591,70,78,1072,1057,1139,1690,1115,819,1731,1898,1899,635,37,198,11,526,66,1080,1081,1431,1091,40,44,99,18,39,151,14,59,126,2362,2964,1629,1916,528,529,775,1432,1724,2704,821,1093,483,586,2766,1892,1031,1032,58,354,355,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "      class NoTrdMatchSides: public FIX::Group",
      "      {",
      "      public:",
      "      NoTrdMatchSides() : FIX::Group(1890,54,FIX::message_order(54,1427,1900,1506,1005,1428,1429,1009,1597,1599,1598,1006,1007,1008,430,1154,2901,1155,2902,453,578,579,376,2404,2351,2352,377,582,943,77,825,826,591,70,78,1072,1057,1139,1690,1115,819,1731,1898,1899,635,37,198,11,526,66,1080,1081,1431,1091,40,44,99,18,39,151,14,59,126,2362,2964,1629,1916,528,529,775,1432,1724,2704,821,1093,483,586,2766,1892,1031,1032,58,354,355,0)) {}",
      "        FIELD_SET(*this, FIX::Side);",
      "        FIELD_SET(*this, FIX::SideExecID);",
      "        FIELD_SET(*this, FIX::SideExecRefID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/PayManagementReport.h",
    "line_number": 1817,
    "line_content": "    FIELD_SET(*this, FIX::NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    };",
      "    FIELD_SET(*this, FIX::ExtraordinaryEventAdjustmentMethod);",
      "    FIELD_SET(*this, FIX::ExchangeLookAlike);",
      "    FIELD_SET(*this, FIX::NoRelatedTrades);",
      "    class NoRelatedTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/PayManagementReport.h",
    "line_number": 1821,
    "line_content": "    NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoRelatedTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
      "      FIELD_SET(*this, FIX::RelatedTradeID);",
      "      FIELD_SET(*this, FIX::RelatedTradeIDSource);",
      "      FIELD_SET(*this, FIX::RelatedRegulatoryTradeIDSource);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CrossOrderCancelRequest.h",
    "line_number": 61,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CrossOrderCancelRequest.h",
    "line_number": 65,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,75,38,152,516,468,469,376,2404,2351,2352,58,354,355,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,75,38,152,516,468,469,376,2404,2351,2352,58,354,355,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);",
      "      FIELD_SET(*this, FIX::ClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralRequest.h",
    "line_number": 67,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralRequest.h",
    "line_number": 71,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralInquiryAck.h",
    "line_number": 72,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralInquiryAck.h",
    "line_number": 76,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/PayManagementRequest.h",
    "line_number": 1811,
    "line_content": "    FIELD_SET(*this, FIX::NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    };",
      "    FIELD_SET(*this, FIX::ExtraordinaryEventAdjustmentMethod);",
      "    FIELD_SET(*this, FIX::ExchangeLookAlike);",
      "    FIELD_SET(*this, FIX::NoRelatedTrades);",
      "    class NoRelatedTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/PayManagementRequest.h",
    "line_number": 1815,
    "line_content": "    NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoRelatedTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
      "      FIELD_SET(*this, FIX::RelatedTradeID);",
      "      FIELD_SET(*this, FIX::RelatedTradeIDSource);",
      "      FIELD_SET(*this, FIX::RelatedRegulatoryTradeIDSource);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralAssignment.h",
    "line_number": 72,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralAssignment.h",
    "line_number": 76,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/PositionMaintenanceReport.h",
    "line_number": 5677,
    "line_content": "    FIELD_SET(*this, FIX::NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    };",
      "    FIELD_SET(*this, FIX::AdjustmentType);",
      "    FIELD_SET(*this, FIX::ThresholdAmount);",
      "    FIELD_SET(*this, FIX::NoRelatedTrades);",
      "    class NoRelatedTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/PositionMaintenanceReport.h",
    "line_number": 5681,
    "line_content": "    NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoRelatedTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
      "      FIELD_SET(*this, FIX::RelatedTradeID);",
      "      FIELD_SET(*this, FIX::RelatedTradeIDSource);",
      "      FIELD_SET(*this, FIX::RelatedRegulatoryTradeIDSource);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/PositionReport.h",
    "line_number": 5809,
    "line_content": "    FIELD_SET(*this, FIX::NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::DeliveryDate);",
      "    FIELD_SET(*this, FIX::ModelType);",
      "    FIELD_SET(*this, FIX::PriceDelta);",
      "    FIELD_SET(*this, FIX::NoRelatedTrades);",
      "    class NoRelatedTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/PositionReport.h",
    "line_number": 5813,
    "line_content": "    NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoRelatedTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
      "      FIELD_SET(*this, FIX::RelatedTradeID);",
      "      FIELD_SET(*this, FIX::RelatedTradeIDSource);",
      "      FIELD_SET(*this, FIX::RelatedRegulatoryTradeIDSource);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CrossOrderCancelReplaceRequest.h",
    "line_number": 63,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CrossOrderCancelReplaceRequest.h",
    "line_number": 67,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,2102,41,11,526,583,586,453,1829,1690,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,2922,1233,1238,497,2639,528,529,1724,1725,1726,2883,1091,582,121,120,2899,775,58,354,355,1816,77,203,544,635,377,659,962,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,2102,41,11,526,583,586,453,1829,1690,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,2922,1233,1238,497,2639,528,529,1724,1725,1726,2883,1091,582,121,120,2899,775,58,354,355,1816,77,203,544,635,377,659,962,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::ShortMarkingExemptIndicator);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/MarketDataIncrementalRefresh.h",
    "line_number": 5657,
    "line_content": "      FIELD_SET(*this, FIX::NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "      };",
      "      FIELD_SET(*this, FIX::IntraFirmTradeIndicator);",
      "      FIELD_SET(*this, FIX::PreviouslyReported);",
      "      FIELD_SET(*this, FIX::NoRelatedTrades);",
      "      class NoRelatedTrades: public FIX::Group",
      "      {",
      "      public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/MarketDataIncrementalRefresh.h",
    "line_number": 5661,
    "line_content": "      NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "      class NoRelatedTrades: public FIX::Group",
      "      {",
      "      public:",
      "      NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
      "        FIELD_SET(*this, FIX::RelatedTradeID);",
      "        FIELD_SET(*this, FIX::RelatedTradeIDSource);",
      "        FIELD_SET(*this, FIX::RelatedRegulatoryTradeIDSource);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeCaptureReportAck.h",
    "line_number": 5784,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "      FIELD_SET(*this, FIX::TradeQtyType);",
      "      FIELD_SET(*this, FIX::TradeQty);",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeCaptureReportAck.h",
    "line_number": 5788,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,1427,1506,1507,1428,1429,453,1,660,581,1630,81,575,576,2671,578,579,376,2404,2351,2352,377,582,336,625,943,430,1154,2901,1155,2902,12,13,479,2922,1233,1238,497,2639,157,230,158,159,738,920,921,922,238,237,118,119,155,156,77,752,518,232,136,825,1158,826,1730,2771,2759,2767,1853,1854,1852,591,70,78,1072,1057,1009,1005,1006,1007,83,1008,1115,1851,37,198,11,526,66,1080,1081,1431,1091,40,44,99,18,39,151,14,59,126,2362,2964,1629,1916,528,529,775,1432,1724,2704,821,1093,483,586,2766,1016,1031,1032,1855,1861,2344,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,1427,1506,1507,1428,1429,453,1,660,581,1630,81,575,576,2671,578,579,376,2404,2351,2352,377,582,336,625,943,430,1154,2901,1155,2902,12,13,479,2922,1233,1238,497,2639,157,230,158,159,738,920,921,922,238,237,118,119,155,156,77,752,518,232,136,825,1158,826,1730,2771,2759,2767,1853,1854,1852,591,70,78,1072,1057,1009,1005,1006,1007,83,1008,1115,1851,37,198,11,526,66,1080,1081,1431,1091,40,44,99,18,39,151,14,59,126,2362,2964,1629,1916,528,529,775,1432,1724,2704,821,1093,483,586,2766,1016,1031,1032,1855,1861,2344,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::SideExecID);",
      "      FIELD_SET(*this, FIX::SideTradeID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeCaptureReportAck.h",
    "line_number": 6179,
    "line_content": "      FIELD_SET(*this, FIX::NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "      };",
      "      FIELD_SET(*this, FIX::CustOrderHandlingInst);",
      "      FIELD_SET(*this, FIX::OrderHandlingInstSource);",
      "      FIELD_SET(*this, FIX::NoRelatedTrades);",
      "      class NoRelatedTrades: public FIX::Group",
      "      {",
      "      public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeCaptureReportAck.h",
    "line_number": 6183,
    "line_content": "      NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "      class NoRelatedTrades: public FIX::Group",
      "      {",
      "      public:",
      "      NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
      "        FIELD_SET(*this, FIX::RelatedTradeID);",
      "        FIELD_SET(*this, FIX::RelatedTradeIDSource);",
      "        FIELD_SET(*this, FIX::RelatedRegulatoryTradeIDSource);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/NewOrderCross.h",
    "line_number": 58,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/NewOrderCross.h",
    "line_number": 62,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,2102,41,11,526,583,586,453,1829,1690,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,2922,1233,1238,497,2639,528,529,1724,1725,1726,2883,1091,582,121,120,2899,775,58,354,355,1816,77,203,544,635,377,659,962,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,2102,41,11,526,583,586,453,1829,1690,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,2922,1233,1238,497,2639,528,529,1724,1725,1726,2883,1091,582,121,120,2899,775,58,354,355,1816,77,203,544,635,377,659,962,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::ShortMarkingExemptIndicator);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralResponse.h",
    "line_number": 74,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralResponse.h",
    "line_number": 78,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeCaptureReport.h",
    "line_number": 5973,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "      FIELD_SET(*this, FIX::TradeQtyType);",
      "      FIELD_SET(*this, FIX::TradeQty);",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeCaptureReport.h",
    "line_number": 5977,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,2102,1427,1428,1429,1009,1597,1599,1598,1005,1506,1507,1006,1007,83,1008,430,1154,2901,1155,2902,453,1671,1,660,581,522,1630,81,575,576,635,1971,2671,2418,578,579,376,2404,2351,2352,377,582,336,625,943,2356,12,13,479,2922,1233,1238,497,2639,157,230,158,159,738,920,921,922,238,237,118,119,155,156,77,58,354,355,752,518,232,136,825,826,1848,1730,2771,2759,2767,1853,1854,1852,591,70,78,1016,1158,1072,1057,1139,1690,1115,1444,1851,37,198,11,526,66,1080,1081,1431,1091,40,44,99,18,39,151,14,59,126,2362,2964,1629,1916,528,529,775,1432,1724,2704,821,1093,483,586,2766,1031,1032,702,1855,1861,1980,2344,29,2334,2335,2361,2691,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,2102,1427,1428,1429,1009,1597,1599,1598,1005,1506,1507,1006,1007,83,1008,430,1154,2901,1155,2902,453,1671,1,660,581,522,1630,81,575,576,635,1971,2671,2418,578,579,376,2404,2351,2352,377,582,336,625,943,2356,12,13,479,2922,1233,1238,497,2639,157,230,158,159,738,920,921,922,238,237,118,119,155,156,77,58,354,355,752,518,232,136,825,826,1848,1730,2771,2759,2767,1853,1854,1852,591,70,78,1016,1158,1072,1057,1139,1690,1115,1444,1851,37,198,11,526,66,1080,1081,1431,1091,40,44,99,18,39,151,14,59,126,2362,2964,1629,1916,528,529,775,1432,1724,2704,821,1093,483,586,2766,1031,1032,702,1855,1861,1980,2344,29,2334,2335,2361,2691,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::ShortMarkingExemptIndicator);",
      "      FIELD_SET(*this, FIX::SideExecID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeCaptureReport.h",
    "line_number": 6483,
    "line_content": "      FIELD_SET(*this, FIX::NoRelatedTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::PosQtyStatus);",
      "        FIELD_SET(*this, FIX::QuantityDate);",
      "      };",
      "      FIELD_SET(*this, FIX::NoRelatedTrades);",
      "      class NoRelatedTrades: public FIX::Group",
      "      {",
      "      public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/TradeCaptureReport.h",
    "line_number": 6487,
    "line_content": "      NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "      class NoRelatedTrades: public FIX::Group",
      "      {",
      "      public:",
      "      NoRelatedTrades() : FIX::Group(1855,1856,FIX::message_order(1856,1857,2103,1858,1859,1860,0)) {}",
      "        FIELD_SET(*this, FIX::RelatedTradeID);",
      "        FIELD_SET(*this, FIX::RelatedTradeIDSource);",
      "        FIELD_SET(*this, FIX::RelatedRegulatoryTradeIDSource);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralInquiry.h",
    "line_number": 70,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp2/CollateralInquiry.h",
    "line_number": 74,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralReport.h",
    "line_number": 68,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralReport.h",
    "line_number": 72,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CrossOrderCancelRequest.h",
    "line_number": 59,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CrossOrderCancelRequest.h",
    "line_number": 63,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,75,38,152,516,468,469,376,58,354,355,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,75,38,152,516,468,469,376,58,354,355,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);",
      "      FIELD_SET(*this, FIX::ClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralRequest.h",
    "line_number": 66,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralRequest.h",
    "line_number": 70,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralInquiryAck.h",
    "line_number": 71,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralInquiryAck.h",
    "line_number": 75,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralAssignment.h",
    "line_number": 71,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralAssignment.h",
    "line_number": 75,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CrossOrderCancelReplaceRequest.h",
    "line_number": 61,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CrossOrderCancelReplaceRequest.h",
    "line_number": 65,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,1091,582,121,120,775,58,354,355,77,203,544,635,377,659,962,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,1091,582,121,120,775,58,354,355,77,203,544,635,377,659,962,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);",
      "      FIELD_SET(*this, FIX::ClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/TradeCaptureReportAck.h",
    "line_number": 483,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::MessageEventSource);",
      "    FIELD_SET(*this, FIX::LastUpdateTime);",
      "    FIELD_SET(*this, FIX::RndPx);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/TradeCaptureReportAck.h",
    "line_number": 487,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,526,66,453,1,660,581,81,575,1093,576,578,579,821,376,377,528,529,582,40,18,483,336,625,943,430,1154,1155,12,13,479,497,157,230,158,159,738,920,921,922,238,237,118,119,155,156,77,752,518,232,136,825,1158,826,591,70,78,1072,1057,1009,1005,1006,1007,83,1008,1016,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,526,66,453,1,660,581,81,575,1093,576,578,579,821,376,377,528,529,582,40,18,483,336,625,943,430,1154,1155,12,13,479,497,157,230,158,159,738,920,921,922,238,237,118,119,155,156,77,752,518,232,136,825,1158,826,591,70,78,1072,1057,1009,1005,1006,1007,83,1008,1016,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrderID);",
      "      FIELD_SET(*this, FIX::SecondaryOrderID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/NewOrderCross.h",
    "line_number": 56,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "        FIELD_SET(*this, FIX::RootPartySubIDType);",
      "      };",
      "    };",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/NewOrderCross.h",
    "line_number": 60,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,1091,582,121,120,775,58,354,355,77,203,544,635,377,659,962,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,1091,582,121,120,775,58,354,355,77,203,544,635,377,659,962,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);",
      "      FIELD_SET(*this, FIX::ClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralResponse.h",
    "line_number": 73,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralResponse.h",
    "line_number": 77,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/TradeCaptureReport.h",
    "line_number": 508,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::MatchStatus);",
      "    FIELD_SET(*this, FIX::MatchType);",
      "    FIELD_SET(*this, FIX::OrderCategory);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/TradeCaptureReport.h",
    "line_number": 512,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,19,526,66,1009,1005,1006,1007,83,1008,430,1154,1155,453,1,660,581,81,1093,575,576,578,579,821,376,377,528,529,582,40,18,483,336,625,943,12,13,479,497,157,230,158,159,738,920,921,922,238,237,118,119,155,156,77,58,354,355,752,518,232,136,825,826,591,70,78,1016,1158,1072,1057,1139,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,19,526,66,1009,1005,1006,1007,83,1008,430,1154,1155,453,1,660,581,81,1093,575,576,578,579,821,376,377,528,529,582,40,18,483,336,625,943,12,13,479,497,157,230,158,159,738,920,921,922,238,237,118,119,155,156,77,58,354,355,752,518,232,136,825,826,591,70,78,1016,1158,1072,1057,1139,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrderID);",
      "      FIELD_SET(*this, FIX::SecondaryOrderID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralInquiry.h",
    "line_number": 62,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix50sp1/CollateralInquiry.h",
    "line_number": 66,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix43/CrossOrderCancelRequest.h",
    "line_number": 82,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "      FIELD_SET(*this, FIX::SecurityAltIDSource);",
      "    };",
      "    FIELD_SET(*this, FIX::TransactTime);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix43/CrossOrderCancelRequest.h",
    "line_number": 86,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,38,152,516,468,469,376,58,354,355,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,38,152,516,468,469,376,58,354,355,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);",
      "      FIELD_SET(*this, FIX::ClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix43/CrossOrderCancelReplaceRequest.h",
    "line_number": 134,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::AccruedInterestRate);",
      "    FIELD_SET(*this, FIX::AccruedInterestAmt);",
      "    FIELD_SET(*this, FIX::NetMoney);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix43/CrossOrderCancelReplaceRequest.h",
    "line_number": 138,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,1,581,589,590,591,78,465,38,152,516,468,469,12,13,479,497,528,529,582,121,120,58,354,355,77,203,544,635,377,659,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,1,581,589,590,591,78,465,38,152,516,468,469,12,13,479,497,528,529,582,121,120,58,354,355,77,203,544,635,377,659,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);",
      "      FIELD_SET(*this, FIX::ClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix43/NewOrderCross.h",
    "line_number": 130,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::AccruedInterestRate);",
      "    FIELD_SET(*this, FIX::AccruedInterestAmt);",
      "    FIELD_SET(*this, FIX::NetMoney);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix43/NewOrderCross.h",
    "line_number": 134,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,1,581,589,590,591,78,465,38,152,516,468,469,12,13,479,497,528,529,582,121,120,58,354,355,77,203,544,635,377,659,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,1,581,589,590,591,78,465,38,152,516,468,469,12,13,479,497,528,529,582,121,120,58,354,355,77,203,544,635,377,659,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::ClOrdID);",
      "      FIELD_SET(*this, FIX::SecondaryClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix43/TradeCaptureReport.h",
    "line_number": 105,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::FutSettDate);",
      "    FIELD_SET(*this, FIX::MatchStatus);",
      "    FIELD_SET(*this, FIX::MatchType);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix43/TradeCaptureReport.h",
    "line_number": 109,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,453,1,581,81,575,576,635,578,579,15,376,377,528,529,582,483,336,625,12,13,479,497,381,157,230,158,159,238,237,118,119,120,155,156,77,58,354,355,442,518,136,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,453,1,581,81,575,576,635,578,579,15,376,377,528,529,582,483,336,625,12,13,479,497,381,157,230,158,159,238,237,118,119,120,155,156,77,58,354,355,442,518,136,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrderID);",
      "      FIELD_SET(*this, FIX::SecondaryOrderID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/double-conversion/ieee.h",
    "line_number": 48,
    "line_content": "  static const int kPhysicalSignificandSize = 52;  // Excludes the hidden bit.",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "  static const uint64_t kExponentMask = UINT64_2PART_C(0x7FF00000, 00000000);",
      "  static const uint64_t kSignificandMask = UINT64_2PART_C(0x000FFFFF, FFFFFFFF);",
      "  static const uint64_t kHiddenBit = UINT64_2PART_C(0x00100000, 00000000);",
      "  static const int kPhysicalSignificandSize = 52;  // Excludes the hidden bit.",
      "  static const int kSignificandSize = 53;",
      "",
      "  Double() : d64_(0) {}"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/double-conversion/ieee.h",
    "line_number": 269,
    "line_content": "  static const int kPhysicalSignificandSize = 23;  // Excludes the hidden bit.",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "  static const uint32_t kExponentMask = 0x7F800000;",
      "  static const uint32_t kSignificandMask = 0x007FFFFF;",
      "  static const uint32_t kHiddenBit = 0x00800000;",
      "  static const int kPhysicalSignificandSize = 23;  // Excludes the hidden bit.",
      "  static const int kSignificandSize = 24;",
      "",
      "  Single() : d32_(0) {}"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/double-conversion/fixed-dtoa.cc",
    "line_number": 117,
    "line_content": "static const int kDoubleSignificandSize = 53;  // Includes the hidden bit.",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "};",
      "",
      "",
      "static const int kDoubleSignificandSize = 53;  // Includes the hidden bit.",
      "",
      "",
      "static void FillDigits32FixedLength(uint32_t number, int requested_length,"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralReport.h",
    "line_number": 65,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralReport.h",
    "line_number": 69,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CrossOrderCancelRequest.h",
    "line_number": 41,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::OrigCrossID);",
      "    FIELD_SET(*this, FIX::CrossType);",
      "    FIELD_SET(*this, FIX::CrossPrioritization);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CrossOrderCancelRequest.h",
    "line_number": 45,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,75,38,152,516,468,469,376,58,354,355,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,41,11,526,583,586,453,229,75,38,152,516,468,469,376,58,354,355,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrigClOrdID);",
      "      FIELD_SET(*this, FIX::ClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralRequest.h",
    "line_number": 66,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralRequest.h",
    "line_number": 70,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralInquiryAck.h",
    "line_number": 71,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralInquiryAck.h",
    "line_number": 75,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralAssignment.h",
    "line_number": 71,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralAssignment.h",
    "line_number": 75,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CrossOrderCancelReplaceRequest.h",
    "line_number": 43,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::OrigCrossID);",
      "    FIELD_SET(*this, FIX::CrossType);",
      "    FIELD_SET(*this, FIX::CrossPrioritization);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CrossOrderCancelReplaceRequest.h",
    "line_number": 47,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,582,121,120,775,58,354,355,77,203,544,635,377,659,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,582,121,120,775,58,354,355,77,203,544,635,377,659,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::ClOrdID);",
      "      FIELD_SET(*this, FIX::SecondaryClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/NewOrderCross.h",
    "line_number": 39,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::CrossID);",
      "    FIELD_SET(*this, FIX::CrossType);",
      "    FIELD_SET(*this, FIX::CrossPrioritization);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/NewOrderCross.h",
    "line_number": 43,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,582,121,120,775,58,354,355,77,203,544,635,377,659,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,11,526,583,453,229,75,1,660,581,589,590,591,70,78,854,38,152,516,468,469,12,13,479,497,528,529,582,121,120,775,58,354,355,77,203,544,635,377,659,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::ClOrdID);",
      "      FIELD_SET(*this, FIX::SecondaryClOrdID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralResponse.h",
    "line_number": 74,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralResponse.h",
    "line_number": 78,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/TradeCaptureReport.h",
    "line_number": 342,
    "line_content": "    FIELD_SET(*this, FIX::NoSides);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    FIELD_SET(*this, FIX::SettlDate);",
      "    FIELD_SET(*this, FIX::MatchStatus);",
      "    FIELD_SET(*this, FIX::MatchType);",
      "    FIELD_SET(*this, FIX::NoSides);",
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/TradeCaptureReport.h",
    "line_number": 346,
    "line_content": "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,526,66,453,1,660,581,81,575,576,578,579,821,15,376,377,528,529,582,40,18,483,336,625,943,12,13,479,497,381,157,230,158,159,738,920,921,922,238,237,118,119,120,155,156,77,58,354,355,752,518,232,136,825,826,591,70,78,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoSides: public FIX::Group",
      "    {",
      "    public:",
      "    NoSides() : FIX::Group(552,54,FIX::message_order(54,37,198,11,526,66,453,1,660,581,81,575,576,578,579,821,15,376,377,528,529,582,40,18,483,336,625,943,12,13,479,497,381,157,230,158,159,738,920,921,922,238,237,118,119,120,155,156,77,58,354,355,752,518,232,136,825,826,591,70,78,0)) {}",
      "      FIELD_SET(*this, FIX::Side);",
      "      FIELD_SET(*this, FIX::OrderID);",
      "      FIELD_SET(*this, FIX::SecondaryOrderID);"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralInquiry.h",
    "line_number": 62,
    "line_content": "    FIELD_SET(*this, FIX::NoTrades);",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "MEDIUM",
    "context_lines": [
      "    NoExecs() : FIX::Group(124,17,FIX::message_order(17,0)) {}",
      "      FIELD_SET(*this, FIX::ExecID);",
      "    };",
      "    FIELD_SET(*this, FIX::NoTrades);",
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  },
  {
    "file_path": "/home/jl1335/quickfixc/src/C++/fix44/CollateralInquiry.h",
    "line_number": 66,
    "line_content": "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
    "crypto_type": "Legacy Cryptography",
    "algorithm": "Weak_Cipher",
    "severity": "MEDIUM",
    "confidence": "HIGH",
    "context_lines": [
      "    class NoTrades: public FIX::Group",
      "    {",
      "    public:",
      "    NoTrades() : FIX::Group(897,571,FIX::message_order(571,818,0)) {}",
      "      FIELD_SET(*this, FIX::TradeReportID);",
      "      FIELD_SET(*this, FIX::SecondaryTradeReportID);",
      "    };"
    ],
    "description": "Weak cipher or hash algorithm",
    "recommendation": "Use AES-256 and SHA-256/SHA-3 minimum"
  }
]